{
  "info": {
    "name": "DataSense API",
    "description": "Complete API collection for DataSense - AI-powered SQL generation and query interpretation",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "value": "{{api_key}}",
        "type": "string"
      },
      {
        "key": "key",
        "value": "X-API-Key",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000/api/v1",
      "type": "string"
    },
    {
      "key": "api_key",
      "value": "your-api-key-here",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "conversation_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', jsonData.accessToken);",
                  "    pm.collectionVariables.set('refresh_token', jsonData.refreshToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"securePassword123\",\n  \"fullName\": \"John Doe\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user account"
          },
          "response": []
        },
        {
          "name": "Sign In",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', jsonData.accessToken);",
                  "    pm.collectionVariables.set('refresh_token', jsonData.refreshToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"securePassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/signin",
              "host": ["{{base_url}}"],
              "path": ["auth", "signin"]
            },
            "description": "Sign in with email and password"
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', jsonData.accessToken);",
                  "    pm.collectionVariables.set('refresh_token', jsonData.refreshToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Refresh access token using refresh token"
          },
          "response": []
        },
        {
          "name": "Revoke Token (Sign Out)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/revoke",
              "host": ["{{base_url}}"],
              "path": ["auth", "revoke"]
            },
            "description": "Revoke refresh token and sign out"
          },
          "response": []
        }
      ]
    },
    {
      "name": "SQL Generation",
      "item": [
        {
          "name": "Generate SQL",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"naturalQuery\": \"Show me all active users\",\n  \"schema\": {\n    \"databaseName\": \"MyDatabase\",\n    \"tables\": [\n      {\n        \"name\": \"Users\",\n        \"schema\": \"dbo\",\n        \"columns\": [\n          {\n            \"name\": \"Id\",\n            \"dataType\": \"int\",\n            \"isPrimaryKey\": true,\n            \"isNullable\": false,\n            \"maxLength\": 0\n          },\n          {\n            \"name\": \"Name\",\n            \"dataType\": \"nvarchar\",\n            \"isPrimaryKey\": false,\n            \"isNullable\": false,\n            \"maxLength\": 100\n          },\n          {\n            \"name\": \"Email\",\n            \"dataType\": \"nvarchar\",\n            \"isPrimaryKey\": false,\n            \"isNullable\": false,\n            \"maxLength\": 255\n          },\n          {\n            \"name\": \"IsActive\",\n            \"dataType\": \"bit\",\n            \"isPrimaryKey\": false,\n            \"isNullable\": false,\n            \"maxLength\": 0\n          }\n        ],\n        \"relationships\": []\n      }\n    ]\n  },\n  \"dbType\": \"sqlserver\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/backend/generate-sql",
              "host": ["{{base_url}}"],
              "path": ["backend", "generate-sql"]
            },
            "description": "Generate SQL query from natural language using provided database schema"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Results Interpretation",
      "item": [
        {
          "name": "Interpret Results",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"originalQuery\": \"How many users are active?\",\n  \"sqlQuery\": \"SELECT COUNT(*) as ActiveCount FROM Users WHERE IsActive = 1\",\n  \"results\": {\n    \"ActiveCount\": 150\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/backend/interpret-results",
              "host": ["{{base_url}}"],
              "path": ["backend", "interpret-results"]
            },
            "description": "Get natural language interpretation of query results"
          },
          "response": []
        },
        {
          "name": "Interpret Results with Context",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"originalQuery\": \"What are the sales by category?\",\n  \"sqlQuery\": \"SELECT Category, SUM(Amount) as TotalSales FROM Orders GROUP BY Category\",\n  \"results\": [\n    { \"Category\": \"Electronics\", \"TotalSales\": 50000 },\n    { \"Category\": \"Clothing\", \"TotalSales\": 35000 },\n    { \"Category\": \"Books\", \"TotalSales\": 15000 }\n  ],\n  \"additionalContext\": \"This is for Q4 2024 sales analysis\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/backend/interpret-results",
              "host": ["{{base_url}}"],
              "path": ["backend", "interpret-results"]
            },
            "description": "Interpret results with additional context"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Chat & Conversation",
      "item": [
        {
          "name": "Get Welcome Suggestions",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"schema\": {\n    \"databaseName\": \"MyDatabase\",\n    \"tables\": [\n      {\n        \"name\": \"Users\",\n        \"schema\": \"dbo\",\n        \"columns\": [\n          {\n            \"name\": \"Id\",\n            \"dataType\": \"int\",\n            \"isPrimaryKey\": true,\n            \"isNullable\": false\n          },\n          {\n            \"name\": \"Name\",\n            \"dataType\": \"nvarchar\",\n            \"isNullable\": false,\n            \"maxLength\": 100\n          }\n        ],\n        \"relationships\": []\n      }\n    ]\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/backend/welcome-suggestions",
              "host": ["{{base_url}}"],
              "path": ["backend", "welcome-suggestions"]
            },
            "description": "Get AI-generated welcome suggestions based on schema"
          },
          "response": []
        },
        {
          "name": "Start Conversation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('conversation_id', jsonData.conversationId);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": 0,\n  \"suggestion\": \"Show me all users\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/backend/start-conversation",
              "host": ["{{base_url}}"],
              "path": ["backend", "start-conversation"]
            },
            "description": "Start a new conversation"
          },
          "response": []
        },
        {
          "name": "Send Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"conversationId\": \"{{conversation_id}}\",\n  \"message\": \"Show me only active users\",\n  \"schema\": {\n    \"databaseName\": \"MyDatabase\",\n    \"tables\": [\n      {\n        \"name\": \"Users\",\n        \"schema\": \"dbo\",\n        \"columns\": [\n          {\n            \"name\": \"Id\",\n            \"dataType\": \"int\",\n            \"isPrimaryKey\": true,\n            \"isNullable\": false\n          },\n          {\n            \"name\": \"IsActive\",\n            \"dataType\": \"bit\",\n            \"isNullable\": false\n          }\n        ],\n        \"relationships\": []\n      }\n    ]\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/backend/send-message",
              "host": ["{{base_url}}"],
              "path": ["backend", "send-message"]
            },
            "description": "Send a message in an active conversation"
          },
          "response": []
        }
      ]
    },
    {
      "name": "App Metadata",
      "item": [
        {
          "name": "Save App Metadata",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"appName\": \"My Application\",\n  \"description\": \"E-commerce platform for online sales\",\n  \"projectDetails\": {\n    \"version\": \"1.0\",\n    \"environment\": \"production\",\n    \"platform\": \"web\"\n  },\n  \"links\": [\n    {\n      \"title\": \"User Guide\",\n      \"url\": \"https://docs.example.com/guide\",\n      \"description\": \"Complete user documentation\"\n    },\n    {\n      \"title\": \"API Documentation\",\n      \"url\": \"https://api.example.com/docs\"\n    }\n  ],\n  \"schema\": {\n    \"databaseName\": \"MyDatabase\",\n    \"tables\": [\n      {\n        \"name\": \"Users\",\n        \"schema\": \"dbo\",\n        \"columns\": [\n          {\n            \"name\": \"Id\",\n            \"dataType\": \"int\",\n            \"isPrimaryKey\": true,\n            \"isNullable\": false\n          }\n        ],\n        \"relationships\": []\n      }\n    ]\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/backend/app-metadata",
              "host": ["{{base_url}}"],
              "path": ["backend", "app-metadata"]
            },
            "description": "Save application metadata including schema, links, and project details"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Health",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/backend/health",
              "host": ["{{base_url}}"],
              "path": ["backend", "health"]
            },
            "description": "Check API health and get list of available endpoints"
          },
          "response": []
        }
      ]
    }
  ]
}

